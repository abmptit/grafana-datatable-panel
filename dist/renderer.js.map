{"version":3,"sources":["../src/renderer.js"],"names":["$","kbn","moment","DataTable","DatatableRenderer","panel","table","isUtc","sanitize","formatters","colorState","value","style","thresholds","i","length","colors","_","first","v","undefined","isArray","join","link","escape","column","defaultCellFormatter","type","date","utc","format","dateFormat","valueFormatter","valueFormats","unit","isString","colorMode","getColorForValue","decimals","colIndex","styles","columns","regex","stringToJsRegex","pattern","text","match","createColumnFormatter","rowData","formattedRowData","y","row","rows","cellData","formatColumnValue","hidden","push","rowNumbersEnabled","unshift","columnNumber","colStyle","items","split","bgColor","bgColorIndex","color","colorIndex","isNaN","parseFloat","replace","getStyleForColumn","cell","rowcolumn","getColorIndexForValue","columnName","columnAlias","columnAliases","name","alias","columnWidth","columnWidthHints","width","tableHolderId","id","fn","dataTable","isDataTable","aDT","destroy","empty","err","console","log","message","emptyData","columnDefs","_this","rowNumberOffset","title","getColumnAlias","columnWidthHint","getColumnWidthHint","td","col","css","fontSize","actualColumn","rowColor","rowColorIndex","rowColorData","getCellColors","parentNode","children","aChild","colorData","should_destroy","destroyedDT","formattedData","generateFormattedData","panelHeight","orderSetting","sortByColumnsData","tableOptions","searching","searchEnabled","info","infoEnabled","lengthChange","lengthChangeEnabled","scrollCollapse","scrollX","stateSave","dom","buttons","select","data","order","scroll","paging","scrollY","pagingType","datatablePagingType","$datatable","newDT","visible","compactRowsEnabled","addClass","stripedRowsEnabled","hoverEnabled","orderColumnEnabled","showCellBorders","showRowBorders","rowsPerPage","page","len","draw","on","search","nodes","each","innerHTML","new_row"],"mappings":"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","file":"renderer.js","sourcesContent":["import $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport moment from 'moment';\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\n\nexport class DatatableRenderer {\n  constructor(panel, table, isUtc, sanitize) {\n    this.formatters = [];\n    this.colorState = {};\n    this.panel = panel;\n    this.table = table;\n    this.isUtc = isUtc;\n    this.sanitize = sanitize;\n  }\n\n  /**\n   * Given a value, return the color corresponding to the threshold set\n   * @param  {[Float]} value [Value to be evaluated]\n   * @param  {[Array]} style [Settings containing colors and thresholds]\n   * @return {[String]}       [color]\n   */\n  getColorForValue(value, style) {\n    if (!style.thresholds) {\n      return null;\n    }\n    for (var i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return style.colors[i];\n      }\n    }\n    return _.first(style.colors);\n  }\n\n  // to determine the overall row color, the index of the threshold is needed\n  getColorIndexForValue(value, style) {\n    if (!style.thresholds) {\n      return null;\n    }\n    for (var i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return i;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * [defaultCellFormatter description]\n   * @param  {[type]} v     [description]\n   * @param  {[type]} style [description]\n   * @return {[type]}       [description]\n   */\n  defaultCellFormatter(v, style) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n    if (_.isArray(v)) {\n      v = v.join(', ');\n    }\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    }\n    else if (style && style.link) {\n      return '<a href=\"' + v + '\" target=\"_blank\">' + v + '</a>';\n    }\n    else {\n      return _.escape(v);\n    }\n  }\n\n  /**\n   * [createColumnFormatter description]\n   * @param  {[type]} style  [description]\n   * @param  {[type]} column [description]\n   * @return {[type]}        [description]\n   */\n  createColumnFormatter(style, column) {\n    if (!style) {\n      return this.defaultCellFormatter;\n    }\n    if (style.type === 'hidden') {\n      return v => {\n        return undefined;\n      };\n    }\n    if (style.type === 'date') {\n      return v => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n        if (_.isArray(v)) {\n          v = v[0];\n        }\n        var date = moment(v);\n        if (this.isUtc) {\n          date = date.utc();\n        }\n        return date.format(style.dateFormat);\n      };\n    }\n    if (style.type === 'number') {\n      let valueFormatter = kbn.valueFormats[column.unit || style.unit];\n      return v => {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n        if (_.isString(v)) {\n          return this.defaultCellFormatter(v, style);\n        }\n        if (style.colorMode) {\n          this.colorState[style.colorMode] = this.getColorForValue(v, style);\n        }\n        return valueFormatter(v, style.decimals, null);\n      };\n    }\n    return (value) => {\n      return this.defaultCellFormatter(value, style);\n    };\n  }\n\n  /**\n   * [formatColumnValue description]\n   * @param  {[type]} colIndex [description]\n   * @param  {[type]} value    [description]\n   * @return {[type]}          [description]\n   */\n  formatColumnValue(colIndex, value) {\n    if (this.formatters[colIndex]) {\n      return this.formatters[colIndex](value);\n    }\n\n    for (let i = 0; i < this.panel.styles.length; i++) {\n      let style = this.panel.styles[i];\n      let column = this.table.columns[colIndex];\n      var regex = kbn.stringToJsRegex(style.pattern);\n      if (column.text.match(regex)) {\n        this.formatters[colIndex] = this.createColumnFormatter(style, column);\n        return this.formatters[colIndex](value);\n      }\n    }\n\n    this.formatters[colIndex] = this.defaultCellFormatter;\n    return this.formatters[colIndex](value);\n  }\n\n  /**\n   * [generateFormattedData description]\n   * @param  {[type]} rowData [description]\n   * @return {[type]}         [description]\n   */\n  generateFormattedData(rowData) {\n    let formattedRowData = [];\n    for (var y = 0; y < rowData.length; y++) {\n      let row = this.table.rows[y];\n      let cellData = [];\n      //cellData.push('');\n      for (var i = 0; i < this.table.columns.length; i++) {\n        let value = this.formatColumnValue(i, row[i]);\n        if (value === undefined) {\n          this.table.columns[i].hidden = true;\n        }\n        cellData.push(this.formatColumnValue(i, row[i]));\n      }\n      if (this.panel.rowNumbersEnabled) {\n        cellData.unshift('rowCounter');\n      }\n      formattedRowData.push(cellData);\n    }\n    return formattedRowData;\n  }\n\n  getStyleForColumn(columnNumber) {\n    let colStyle = null;\n    for (let i = 0; i < this.panel.styles.length; i++) {\n      let style = this.panel.styles[i];\n      let column = this.table.columns[columnNumber];\n      if (column === undefined) break;\n      var regex = kbn.stringToJsRegex(style.pattern);\n      if (column.text.match(regex)) {\n        colStyle = style;\n        break;\n      }\n    }\n    return colStyle;\n  }\n\n  getCellColors(colorState, columnNumber, cellData) {\n    var items = cellData.split(/(\\s+)/);\n    // only color cell if the content is a number?\n    var bgColor = null;\n    var bgColorIndex = null;\n    var color = null;\n    var colorIndex = null;\n    let colStyle = null;\n    let value = null;\n    // check if the content has a numeric value after the split\n    if (!isNaN(items[0])) {\n      // run value through threshold function\n      value = parseFloat(items[0].replace(\",\", \".\"));\n      colStyle = this.getStyleForColumn(columnNumber);\n    }\n    if (colStyle !== null) {\n      // check color for either cell or row\n      if ((colorState.cell) || (colorState.row) || (colorState.rowcolumn)){\n        // bgColor = _this.colorState.cell;\n        bgColor = this.getColorForValue(value, colStyle);\n        bgColorIndex = this.getColorIndexForValue(value, colStyle);\n        color = 'white';\n      }\n      // just the value color is set\n      if (colorState.value) {\n        //color = _this.colorState.value;\n        color = this.getColorForValue(value, colStyle);\n        colorIndex = this.getColorIndexForValue(value, colStyle);\n      }\n    }\n    return {\n      bgColor: bgColor,\n      bgColorIndex: bgColorIndex,\n      color: color,\n      colorIndex: colorIndex\n    };\n  }\n\n  getColumnAlias(columnName) {\n    // default to the columnName\n    var columnAlias = columnName;\n    if (this.panel.columnAliases !== undefined) {\n      for (let i = 0; i < this.panel.columnAliases.length; i++) {\n        if (this.panel.columnAliases[i].name === columnName) {\n          columnAlias = this.panel.columnAliases[i].alias;\n          break;\n        }\n      }\n    }\n    return columnAlias;\n  }\n\n  getColumnWidthHint(columnName) {\n    // default to the columnName\n    var columnWidth = '';\n    if (this.panel.columnWidthHints !== undefined) {\n      for (let i = 0; i < this.panel.columnWidthHints.length; i++) {\n        if (this.panel.columnWidthHints[i].name === columnName) {\n          columnWidth = this.panel.columnWidthHints[i].width;\n          break;\n        }\n      }\n    }\n    return columnWidth;\n  }\n\n  /**\n   * Construct table using Datatables.net API\n   *  multiple types supported\n   * timeseries_to_rows (column 0 = timestamp)\n   * timeseries_to_columns\n   * timeseries_aggregations - column 0 is the metric name (series name, not a timestamp)\n   * annotations - specific headers for this\n   * table\n   * json (raw)\n   * columns[x].type === \"date\" then set columndefs to parse the date, otherwise leave it as default\n   * convert table.columns[N].text to columns formatted to datatables.net format\n   * @return {[Boolean]} True if loaded without errors\n   */\n  render() {\n    const tableHolderId = '#datatable-panel-table-' + this.panel.id;\n    try {\n      if ($.fn.dataTable.isDataTable(tableHolderId)) {\n        var aDT = $(tableHolderId).DataTable();\n        aDT.destroy();\n        $(tableHolderId).empty();\n      }\n    }\n    catch(err) {\n      console.log(\"Exception: \" + err.message);\n    }\n\n    if (this.panel.emptyData) {\n      return;\n    }\n    var columns = [];\n    var columnDefs = [];\n    var _this = this;\n    var rowNumberOffset = 0;\n    if (this.panel.rowNumbersEnabled) {\n      rowNumberOffset = 1;\n      columns.push({\n        title: '',\n        type: 'number'\n      });\n      columnDefs.push(\n        {\n            \"searchable\": false,\n            \"orderable\": false,\n            \"targets\": 0,\n            \"width\": \"1%\",\n        });\n    }\n    for (let i = 0; i < this.table.columns.length; i++) {\n      var columnAlias = this.getColumnAlias(this.table.columns[i].text);\n      var columnWidthHint = this.getColumnWidthHint(this.table.columns[i].text);\n      // NOTE: the width below is a \"hint\" and will be overridden as needed, this lets most tables show timestamps\n      // with full width\n      /* jshint loopfunc: true */\n      columns.push({\n        title: columnAlias,\n        type: this.table.columns[i].type,\n        width: columnWidthHint\n      });\n        columnDefs.push(\n          {\n            \"targets\": i + rowNumberOffset,\n            \"createdCell\": function (td, cellData, rowData, row, col) {\n              // hidden columns have null data\n              if (cellData === null) return;\n              // set the fontsize for the cell\n              $(td).css('font-size', _this.panel.fontSize);\n              // undefined types should have numerical data, any others are already formatted\n              let actualColumn = col;\n              if (_this.panel.rowNumbersEnabled) {\n                actualColumn -= 1;\n              }\n              if (_this.table.columns[actualColumn].type !== undefined) return;\n              // for coloring rows, get the \"worst\" threshold\n              var rowColor = null;\n              var color = null;\n              var rowColorIndex = null;\n              var rowColorData = null;\n              if (_this.colorState.row) {\n                // run all of the rowData through threshold check, get the \"highest\" index\n                // and use that for the entire row\n                if (rowData === null) return;\n                rowColorIndex = -1;\n                rowColorData = null;\n                rowColor = _this.colorState.row;\n                // this should be configurable...\n                color = 'white';\n                for (let columnNumber = 0; columnNumber < _this.table.columns.length; columnNumber++) {\n                  // only columns of type undefined are checked\n                  if (_this.table.columns[columnNumber].type === undefined) {\n                    rowColorData = _this.getCellColors(_this.colorState, columnNumber, rowData[columnNumber + rowNumberOffset]);\n                    if (rowColorData.bgColorIndex !== null) {\n                      if (rowColorData.bgColorIndex > rowColorIndex) {\n                        rowColorIndex = rowColorData.bgColorIndex;\n                        rowColor = rowColorData.bgColor;\n                      }\n                    }\n                  }\n                }\n                // style the entire row (the parent of the td is the tr)\n                // this will color the rowNumber and Timestamp also\n                $(td.parentNode).children().css('color', color);\n                $(td.parentNode).children().css('background-color', rowColor);\n              }\n\n              if (_this.colorState.rowcolumn) {\n                // run all of the rowData through threshold check, get the \"highest\" index\n                // and use that for the entire row\n                if (rowData === null) return;\n                rowColorIndex = -1;\n                rowColorData = null;\n                rowColor = _this.colorState.rowcolumn;\n                // this should be configurable...\n                color = 'white';\n                for (let columnNumber = 0; columnNumber < _this.table.columns.length; columnNumber++) {\n                  // only columns of type undefined are checked\n                  if (_this.table.columns[columnNumber].type === undefined) {\n                    rowColorData = _this.getCellColors(_this.colorState, columnNumber, rowData[columnNumber + rowNumberOffset]);\n                    if (rowColorData.bgColorIndex !== null) {\n                      if (rowColorData.bgColorIndex > rowColorIndex) {\n                        rowColorIndex = rowColorData.bgColorIndex;\n                        rowColor = rowColorData.bgColor;\n                      }\n                    }\n                  }\n                }\n                // style the rowNumber and Timestamp column\n                // the cell colors will be determined in the next phase\n                if (_this.table.columns[0].type !== undefined) {\n                  var children = $(td.parentNode).children();\n                  var aChild = children[0];\n                  $(aChild).css('color', color);\n                  $(aChild).css('background-color', rowColor);\n                  // the 0 column contains the row number, if they are enabled\n                  // then the above just filled in the color for the row number,\n                  // now take care of the timestamp\n                  if (_this.panel.rowNumbersEnabled) {\n                    aChild = children[1];\n                    $(aChild).css('color', color);\n                    $(aChild).css('background-color', rowColor);\n                  }\n                }\n              }\n\n              // Process cell coloring\n              // Two scenarios:\n              //    1) Cell coloring is enabled, the above row color is skipped\n              //    2) RowColumn is enabled, the above row color is process, but we also\n              //    set the cell colors individually\n              var colorData = _this.getCellColors(_this.colorState, actualColumn, cellData);\n              if ((_this.colorState.cell) || (_this.colorState.rowcolumn)){\n                if (colorData.color !== undefined) {\n                  $(td).css('color', colorData.color);\n                }\n                if (colorData.bgColor !== undefined) {\n                  $(td).css('background-color', colorData.bgColor);\n                }\n              } else if (_this.colorState.value) {\n                if (colorData.color !== undefined) {\n                  $(td).css('color', colorData.color);\n                }\n              }\n            }\n          }\n        );\n    }\n\n    try {\n      var should_destroy = false;\n      if ( $.fn.dataTable.isDataTable( '#datatable-panel-table-' + this.panel.id )) {\n        should_destroy = true;\n      }\n      if (should_destroy) {\n        var destroyedDT = $('#datatable-panel-table-' + this.panel.id).DataTable();\n        destroyedDT.destroy();\n        $('#datatable-panel-table-' + this.panel.id).empty();\n      }\n    }\n    catch(err) {\n      console.log(\"Exception: \" + err.message);\n    }\n    // sanity check\n    // annotations come back as 4 items in an array per row. If the first row content is undefined, then modify to empty\n    // since datatables.net throws errors\n    if (this.table.rows[0].length === 4) {\n      if (this.table.rows[0][0] === undefined) {\n        // detected empty annotations\n        this.table.rows = [];\n      }\n    }\n    // pass the formatted rows into the datatable\n    var formattedData = this.generateFormattedData(this.table.rows);\n\n    if (this.panel.rowNumbersEnabled) {\n      // shift the data to the right\n    }\n    var panelHeight = this.panel.panelHeight;\n    let orderSetting = this.panel.sortByColumnsData;\n    //if (this.panel.rowNumbersEnabled) {\n    //  // when row numbers are enabled, show them ascending\n    //  orderSetting = [[0, 'asc']];\n    //}\n\n    var tableOptions = {\n      \"lengthMenu\": [ [5, 10, 25, 50, 75, 100, -1], [5, 10, 25, 50, 75, 100, \"All\"] ],\n      searching: this.panel.searchEnabled,\n      info: this.panel.infoEnabled,\n      lengthChange: this.panel.lengthChangeEnabled,\n      scrollCollapse: false,\n      scrollX: true,\n      stateSave: true,\n      dom: 'Bfrtip',\n      buttons: [\n        'copy', 'excel', 'csv', 'pdf', 'print'\n      ],\n      select: {\n        style: 'os'\n      },\n      data: formattedData,\n      columns: columns,\n      columnDefs: columnDefs,\n      \"search\": {\n        \"regex\": true\n      },\n      order: orderSetting\n    };\n    if (this.panel.scroll) {\n      tableOptions.paging = false;\n      tableOptions.scrollY = panelHeight;\n    } else {\n      tableOptions.paging = true;\n      tableOptions.pagingType = this.panel.datatablePagingType;\n    }\n    var $datatable = $(tableHolderId);\n    var newDT = $datatable.DataTable(tableOptions);\n\n    // hide columns that are marked hidden\n    for (let i = 0; i < this.table.columns.length; i++) {\n      if (this.table.columns[i].hidden) {\n        newDT.column( i + rowNumberOffset ).visible( false );\n      }\n    }\n\n    // enable compact mode\n    if (this.panel.compactRowsEnabled) {\n      $datatable.addClass( 'compact' );\n    }\n    // enable striped mode\n    if (this.panel.stripedRowsEnabled) {\n      $datatable.addClass( 'stripe' );\n    }\n    if (this.panel.hoverEnabled) {\n      $datatable.addClass( 'hover' );\n    }\n    if (this.panel.orderColumnEnabled) {\n      $datatable.addClass( 'order-column' );\n    }\n    // these two are mutually exclusive\n    if (this.panel.showCellBorders) {\n      $datatable.addClass( 'cell-border' );\n    } else {\n      if (this.panel.showRowBorders) {\n        $datatable.addClass( 'row-border' );\n      }\n    }\n    if (!this.panel.scroll) {\n      // set the page size\n      if (this.panel.rowsPerPage !== null) {\n        newDT.page.len( this.panel.rowsPerPage ).draw();\n      }\n    }\n    // function to display row numbers\n    if (this.panel.rowNumbersEnabled) {\n      newDT.on( 'order.dt search.dt', function () {\n        newDT.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\n            cell.innerHTML = i+1;\n        } );\n      } ).draw();\n    }\n  }\n\n  render_values() {\n      let rows = [];\n\n      for (var y = 0; y < this.table.rows.length; y++) {\n        let row = this.table.rows[y];\n        let new_row = [];\n        for (var i = 0; i < this.table.columns.length; i++) {\n          new_row.push(this.formatColumnValue(i, row[i]));\n        }\n        rows.push(new_row);\n      }\n      return {\n          columns: this.table.columns,\n          rows: rows,\n      };\n  }\n}\n"]}